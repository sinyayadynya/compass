{#
/**
 * @file
 * Theme override to display a table.
 *
 * Available variables:
 * - attributes: HTML attributes to apply to the <table> tag.
 * - caption: A localized string for the <caption> tag.
 * - colgroups: Column groups. Each group contains the following properties:
 *   - attributes: HTML attributes to apply to the <col> tag.
 *     Note: Drupal currently supports only one table header row, see
 *     https://www.drupal.org/node/893530 and
 *     http://api.drupal.org/api/drupal/includes!theme.inc/function/theme_table/7#comment-5109.
 * - header: Table header cells. Each cell contains the following properties:
 *   - tag: The HTML tag name to use; either 'th' or 'td'.
 *   - attributes: HTML attributes to apply to the tag.
 *   - content: A localized string for the title of the column.
 *   - field: Field name (required for column sorting).
 *   - sort: Default sort order for this column ("asc" or "desc").
 * - sticky: A flag indicating whether to use a "sticky" table header.
 * - rows: Table rows. Each row contains the following properties:
 *   - attributes: HTML attributes to apply to the <tr> tag.
 *   - data: Table cells.
 *   - no_striping: A flag indicating that the row should receive no
 *     'even / odd' styling. Defaults to FALSE.
 *   - cells: Table cells of the row. Each cell contains the following keys:
 *     - tag: The HTML tag name to use; either 'th' or 'td'.
 *     - attributes: Any HTML attributes, such as "colspan", to apply to the
 *       table cell.
 *     - content: The string to display in the table cell.
 *     - active_table_sort: A boolean indicating whether the cell is the active
         table sort.
 * - footer: Table footer rows, in the same format as the rows variable.
 * - empty: The message to display in an extra row if table does not have
 *   any rows.
 * - no_striping: A boolean indicating that the row should receive no striping.
 * - header_columns: The number of columns in the header.
 * - responsive: Indicates whether to add the drupal.tableresponsive library
 *   providing responsive tables.  Requires a 'priority-medium' or
 *   'priority-low' and 'hidden' classes added to a particular column's <th> and
 *   <td> elements.
 * - tabledrag: @see core/lib/Drupal/Core/Render/Element/Table.php
 *
 * @see template_preprocess_table()
 */
#}
{% set css_path = '/' ~ componentMetadata.path ~ '/css/components' %}
{% if tableselect and multiple %}
  {{ attach_library('core/drupal.tableselect') }}
  <link href="{{ file_url(css_path ~ '/tableselect.css') }}"
    rel="stylesheet"
    media="all"
  >
{% endif %}
{% if header.sort %}
  <link href="{{ file_url(css_path ~ '/tablesort.css') }}"
    rel="stylesheet"
    media="all"
  >
{% endif %}
{% if responsive and header %}
  {% set attributes = attributes.addClass('responsive-enabled') %}
  {{ attach_library('core/drupal.tableresponsive') }}
  <link href="{{ file_url(css_path ~ '/table-responsive.css') }}"
    rel="stylesheet"
    media="all"
  >
{% endif %}
{% if sticky %}
  {% set attributes = attributes.addClass('sticky-enabled') %}
  {{ attach_library('core/drupal.tableheader') }}
  <link href="{{ file_url(css_path ~ '/table-sticky.css') }}"
    rel="stylesheet"
    media="all"
  >
{% endif %}
{% if tabledrag %}
  {% if not attributes.hasAttribute('id') %}
    {# @todo: https://www.drupal.org/project/drupal/issues/3115445 #}
    {% set attributes = attributes.setAttribute('id', attributes['data-component-id']|clean_id) %}
  {% endif %}
  {{ attach_library('core/drupal.tabledrag') }}
  <link href="{{ file_url(css_path ~ '/tabledrag.css') }}"
    rel="stylesheet"
    media="all"
  >
{% endif %}
{% block content %}
  <table{{ attributes.addClass('min-w-full divide-y divide-gray-300') }}>
    {% if caption %}
      <caption>{{ caption }}</caption>
    {% endif %}

    {% for colgroup in colgroups %}
      {% if colgroup.cols %}
        <colgroup{{ colgroup.attributes }}>
          {% for col in colgroup.cols %}
            <col{{ col.attributes }} />
          {% endfor %}
        </colgroup>
      {% else %}
        <colgroup{{ colgroup.attributes }} />
      {% endif %}
    {% endfor %}

    {% if header %}
      <thead>
        <tr>
          {% for cell in header %}
            {%
              set cell_classes = [
                cell.active_table_sort ? 'is-active',
                'px-3 py-3.5 text-left text-sm font-semibold text-gray-900',
              ]
            %}
            <{{ cell.tag }}{{ cell.attributes.addClass(cell_classes) }}>
              {{- cell.content -}}
            </{{ cell.tag }}>
          {% endfor %}
        </tr>
      </thead>
    {% endif %}

    {% if rows %}
      <tbody class="divide-y divide-gray-200">
        {% for row in rows %}
          {%
            set row_classes = [
              not no_striping ? cycle(['odd', 'even bg-gray-50'], loop.index0),
              '*:px-3 *:py-4 *:text-sm *:text-gray-500',
            ]
          %}
          <tr{{ row.attributes.addClass(row_classes) }}>
            {% for cell in row.cells %}
              <{{ cell.tag }}{{ cell.attributes }}>
                {{- cell.content -}}
              </{{ cell.tag }}>
            {% endfor %}
          </tr>
        {% endfor %}
      </tbody>
    {% elseif empty %}
      <tbody class="divide-y divide-gray-200">
        <tr class="odd">
          <td colspan="{{ header_columns }}" class="empty message">{{ empty }}</td>
        </tr>
      </tbody>
    {% endif %}
    {% if footer %}
      <tfoot>
        {% for row in footer %}
          <tr{{ row.attributes }}>
            {% for cell in row.cells %}
              <{{ cell.tag }}{{ cell.attributes }}>
                {{- cell.content -}}
              </{{ cell.tag }}>
            {% endfor %}
          </tr>
        {% endfor %}
      </tfoot>
    {% endif %}
  </table>
{% endblock %}
